@page "/"

@using BlazorTableDemo.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

<div class="vWrapper" style="height: 250px;overflow-y:scroll;">
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize @ref="asyncVirtualize" ItemsProvider="LoadForecasts" Context="forecast" ItemSize="10">
                <ItemContent>
                    <tr class="vRow" @onclick="@(() => RowClick(forecast))">
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                </ItemContent>
                <Placeholder>
                    <p>
                        Loading...
                    </p>
                </Placeholder>
            </Virtualize>
        </tbody>
    </table>
</div>
<br />
<div>    
    <Forecast forecast=@curSelection />
</div>
<ModalDialog showModal=@showModal Data=@curSelection OnChange="DialogChange" />

@code {
    private Virtualize<WeatherForecast> asyncVirtualize;        // can be used to force table update if required by calling asyncVirtualize.RefreshDataAsync()
    private WeatherForecast curSelection;
    private bool showModal = false;

    private void DialogChange(WeatherForecast forecast)
    {
        showModal = false;
        curSelection = forecast;
    }

    protected async ValueTask<ItemsProviderResult<WeatherForecast>> LoadForecasts(ItemsProviderRequest request)
    {
        var fc = await ForecastService.GetForecastAsync(DateTime.Now);
        return new ItemsProviderResult<WeatherForecast>(fc.Skip(request.StartIndex).Take(request.Count), fc.Count());
    }

    /// <summary>
    /// Event on table row click that shows a modal dialog to allow edit the data.
    /// </summary>
    /// <param name="forecast">Model for the row clicked</param>
    private void RowClick(WeatherForecast forecast)
    {
        curSelection = forecast;
        showModal = true;
    }
}
